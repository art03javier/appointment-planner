{"ast":null,"code":"/*\r\nimport React, { useState } from \"react\";\r\nimport { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\";\r\nimport Root, { ROUTES } from \"./components/root/Root\";\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\nimport ErrorBoundary from './components/errorBoundary/ErrorBoundary';\r\n\r\nfunction App() {\r\n  // Define state variables for contacts and appointments\r\n  const [contacts, setContacts] = useState([]);\r\n  const [appointments, setAppointments] = useState([]);\r\n\r\n  // Callback function to add a new contact\r\n  const addContact = (name, phone, email) => {\r\n    const newContact = { name, phone, email };\r\n    setContacts([...contacts, newContact]);\r\n  };\r\n\r\n  // Callback function to add a new appointment\r\n  const addAppointment = (name, contact, date, time) => {\r\n    const newAppointment = { name, contact, date, time };\r\n    setAppointments([...appointments, newAppointment]);\r\n  };\r\n\r\n  const router = createBrowserRouter(createRoutesFromElements(\r\n    <Route path=\"/\" element={<Root />}>\r\n      <Route index element={<Navigate to={ROUTES.CONTACTS} replace />} />\r\n      <Route\r\n        path={ROUTES.CONTACTS}\r\n        element={<ContactsPage contacts={contacts} addContact={addContact} />}\r\n      />\r\n      <Route\r\n        path={ROUTES.APPOINTMENTS}\r\n        element={\r\n          <AppointmentsPage\r\n            appointments={appointments}\r\n            contacts={contacts}\r\n            addAppointment={addAppointment}\r\n          />\r\n        }\r\n      />\r\n    </Route>\r\n  ));\r\n\r\n  return (\r\n    <ErrorBoundary> // Wrap the entire routing with ErrorBoundary \r\n      <RouterProvider router={router} />\r\n    </ErrorBoundary>\r\n  );\r\n}\r\n\r\nexport default App;\r\n*/","map":{"version":3,"names":[],"sources":["C:/Users/art03/appointment-planner-starting-v18/src/App.js"],"sourcesContent":["/*\r\nimport React, { useState } from \"react\";\r\nimport { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\";\r\nimport Root, { ROUTES } from \"./components/root/Root\";\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\nimport ErrorBoundary from './components/errorBoundary/ErrorBoundary';\r\n\r\nfunction App() {\r\n  // Define state variables for contacts and appointments\r\n  const [contacts, setContacts] = useState([]);\r\n  const [appointments, setAppointments] = useState([]);\r\n\r\n  // Callback function to add a new contact\r\n  const addContact = (name, phone, email) => {\r\n    const newContact = { name, phone, email };\r\n    setContacts([...contacts, newContact]);\r\n  };\r\n\r\n  // Callback function to add a new appointment\r\n  const addAppointment = (name, contact, date, time) => {\r\n    const newAppointment = { name, contact, date, time };\r\n    setAppointments([...appointments, newAppointment]);\r\n  };\r\n\r\n  const router = createBrowserRouter(createRoutesFromElements(\r\n    <Route path=\"/\" element={<Root />}>\r\n      <Route index element={<Navigate to={ROUTES.CONTACTS} replace />} />\r\n      <Route\r\n        path={ROUTES.CONTACTS}\r\n        element={<ContactsPage contacts={contacts} addContact={addContact} />}\r\n      />\r\n      <Route\r\n        path={ROUTES.APPOINTMENTS}\r\n        element={\r\n          <AppointmentsPage\r\n            appointments={appointments}\r\n            contacts={contacts}\r\n            addAppointment={addAppointment}\r\n          />\r\n        }\r\n      />\r\n    </Route>\r\n  ));\r\n\r\n  return (\r\n    <ErrorBoundary> // Wrap the entire routing with ErrorBoundary \r\n      <RouterProvider router={router} />\r\n    </ErrorBoundary>\r\n  );\r\n}\r\n\r\nexport default App;\r\n*/\r\n\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}