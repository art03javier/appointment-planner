{"ast":null,"code":"/*\r\n//ContactForm.js\r\nimport React from \"react\";\r\n\r\nexport const ContactForm = ({\r\n  name,\r\n  setName,\r\n  phone,\r\n  setPhone,\r\n  email,\r\n  setEmail,\r\n  handleSubmit,\r\n  isDuplicate\r\n}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label htmlFor=\"name\">Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          required\r\n        />\r\n        {isDuplicate && <span className=\"error\">Name is a duplicate</span>}\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"phone\">Phone:</label>\r\n        <input\r\n          type=\"tel\"\r\n          id=\"phone\"\r\n          value={phone}\r\n          onChange={(e) => setPhone(e.target.value)}\r\n          pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\r\n          required\r\n        />\r\n        <span className=\"hint\">Format: 123-456-7890</span>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"email\">Email:</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">Add Contact</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n*/\n/*\r\n//ContactForm.js\r\nimport React from \"react\";\r\n\r\nexport const ContactForm = ({\r\n  name,\r\n  setName,\r\n  phone,\r\n  setPhone,\r\n  email,\r\n  setEmail,\r\n  handleSubmit,\r\n  isDuplicate // Use this prop instead of local state\r\n}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label htmlFor=\"name\">Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          required\r\n        />\r\n        // Use isDuplicate prop instead of local state \r\n        {isDuplicate && <span className=\"error\">Name is a duplicate</span>}\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"phone\">Phone:</label>\r\n        <input\r\n          type=\"tel\"\r\n          id=\"phone\"\r\n          value={phone}\r\n          onChange={(e) => setPhone(e.target.value)}\r\n          pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\r\n          required\r\n        />\r\n        <span className=\"hint\">Format: 123-456-7890</span>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"email\">Email:</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">Add Contact</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n*/","map":{"version":3,"names":[],"sources":["C:/Users/art03/appointment-planner-starting-v18/src/components/contactForm/ContactForm.js"],"sourcesContent":["/*\r\n//ContactForm.js\r\nimport React from \"react\";\r\n\r\nexport const ContactForm = ({\r\n  name,\r\n  setName,\r\n  phone,\r\n  setPhone,\r\n  email,\r\n  setEmail,\r\n  handleSubmit,\r\n  isDuplicate\r\n}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label htmlFor=\"name\">Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          required\r\n        />\r\n        {isDuplicate && <span className=\"error\">Name is a duplicate</span>}\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"phone\">Phone:</label>\r\n        <input\r\n          type=\"tel\"\r\n          id=\"phone\"\r\n          value={phone}\r\n          onChange={(e) => setPhone(e.target.value)}\r\n          pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\r\n          required\r\n        />\r\n        <span className=\"hint\">Format: 123-456-7890</span>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"email\">Email:</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">Add Contact</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n*/\r\n/*\r\n//ContactForm.js\r\nimport React from \"react\";\r\n\r\nexport const ContactForm = ({\r\n  name,\r\n  setName,\r\n  phone,\r\n  setPhone,\r\n  email,\r\n  setEmail,\r\n  handleSubmit,\r\n  isDuplicate // Use this prop instead of local state\r\n}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label htmlFor=\"name\">Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n          required\r\n        />\r\n        // Use isDuplicate prop instead of local state \r\n        {isDuplicate && <span className=\"error\">Name is a duplicate</span>}\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"phone\">Phone:</label>\r\n        <input\r\n          type=\"tel\"\r\n          id=\"phone\"\r\n          value={phone}\r\n          onChange={(e) => setPhone(e.target.value)}\r\n          pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\r\n          required\r\n        />\r\n        <span className=\"hint\">Format: 123-456-7890</span>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"email\">Email:</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">Add Contact</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n*/"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}