{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\art03\\\\appointment-planner-starting-v18\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/*\r\nimport React, { useState } from \"react\";\r\nimport { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\";\r\nimport Root, { ROUTES } from \"./components/root/Root\";\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\nimport ErrorBoundary from './components/errorBoundary/ErrorBoundary';\r\n\r\nfunction App() {\r\n  // Define state variables for contacts and appointments\r\n  const [contacts, setContacts] = useState([]);\r\n  const [appointments, setAppointments] = useState([]);\r\n\r\n  // Callback function to add a new contact\r\n  const addContact = (name, phone, email) => {\r\n    const newContact = { name, phone, email };\r\n    setContacts([...contacts, newContact]);\r\n  };\r\n\r\n  // Callback function to add a new appointment\r\n  const addAppointment = (name, contact, date, time) => {\r\n    const newAppointment = { name, contact, date, time };\r\n    setAppointments([...appointments, newAppointment]);\r\n  };\r\n\r\n  const router = createBrowserRouter(createRoutesFromElements(\r\n    <Route path=\"/\" element={<Root />}>\r\n      <Route index element={<Navigate to={ROUTES.CONTACTS} replace />} />\r\n      <Route\r\n        path={ROUTES.CONTACTS}\r\n        element={<ContactsPage contacts={contacts} addContact={addContact} />}\r\n      />\r\n      <Route\r\n        path={ROUTES.APPOINTMENTS}\r\n        element={\r\n          <AppointmentsPage\r\n            appointments={appointments}\r\n            contacts={contacts}\r\n            addAppointment={addAppointment}\r\n          />\r\n        }\r\n      />\r\n    </Route>\r\n  ));\r\n\r\n  return (\r\n    <ErrorBoundary> // Wrap the entire routing with ErrorBoundary \r\n      <RouterProvider router={router} />\r\n    </ErrorBoundary>\r\n  );\r\n}\r\n\r\nexport default App;\r\n*/\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Navigate } from \"react-router-dom\";\nimport ErrorBoundary from \"./components/errorBoundary/ErrorBoundary\";\nimport Root, { ROUTES } from \"./components/root/Root\";\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Define state variables for appointments and contacts\n  const [appointments, setAppointments] = useState([]);\n  const [contacts, setContacts] = useState([]);\n\n  // Callback function to add a new appointment\n  const addAppointment = (name, contact, date, time) => {\n    setAppointments([...appointments, {\n      name: name,\n      contact: contact,\n      date: date,\n      time: time\n    }]);\n  };\n\n  // Callback function to add a new contact\n  const addContact = (name, phone, email) => {\n    setContacts([...contacts, {\n      name: name,\n      phone: phone,\n      email: email\n    }]);\n  };\n\n  // Router setup with React Router\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: ROUTES.CONTACTS,\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: ROUTES.CONTACTS,\n        element: /*#__PURE__*/_jsxDEV(ContactsPage, {\n          contacts: contacts,\n          addContact: addContact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: ROUTES.APPOINTMENTS,\n        element: /*#__PURE__*/_jsxDEV(AppointmentsPage, {\n          appointments: appointments,\n          addAppointment: addAppointment,\n          contacts: contacts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fwayFhv9NcdGZgbII3rXNLT5q1Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Navigate","ErrorBoundary","Root","ROUTES","AppointmentsPage","ContactsPage","jsxDEV","_jsxDEV","App","_s","appointments","setAppointments","contacts","setContacts","addAppointment","name","contact","date","time","addContact","phone","email","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","index","to","CONTACTS","replace","APPOINTMENTS","_c","$RefreshReg$"],"sources":["C:/Users/art03/appointment-planner-starting-v18/src/App.js"],"sourcesContent":["/*\r\nimport React, { useState } from \"react\";\r\nimport { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\";\r\nimport Root, { ROUTES } from \"./components/root/Root\";\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\nimport ErrorBoundary from './components/errorBoundary/ErrorBoundary';\r\n\r\nfunction App() {\r\n  // Define state variables for contacts and appointments\r\n  const [contacts, setContacts] = useState([]);\r\n  const [appointments, setAppointments] = useState([]);\r\n\r\n  // Callback function to add a new contact\r\n  const addContact = (name, phone, email) => {\r\n    const newContact = { name, phone, email };\r\n    setContacts([...contacts, newContact]);\r\n  };\r\n\r\n  // Callback function to add a new appointment\r\n  const addAppointment = (name, contact, date, time) => {\r\n    const newAppointment = { name, contact, date, time };\r\n    setAppointments([...appointments, newAppointment]);\r\n  };\r\n\r\n  const router = createBrowserRouter(createRoutesFromElements(\r\n    <Route path=\"/\" element={<Root />}>\r\n      <Route index element={<Navigate to={ROUTES.CONTACTS} replace />} />\r\n      <Route\r\n        path={ROUTES.CONTACTS}\r\n        element={<ContactsPage contacts={contacts} addContact={addContact} />}\r\n      />\r\n      <Route\r\n        path={ROUTES.APPOINTMENTS}\r\n        element={\r\n          <AppointmentsPage\r\n            appointments={appointments}\r\n            contacts={contacts}\r\n            addAppointment={addAppointment}\r\n          />\r\n        }\r\n      />\r\n    </Route>\r\n  ));\r\n\r\n  return (\r\n    <ErrorBoundary> // Wrap the entire routing with ErrorBoundary \r\n      <RouterProvider router={router} />\r\n    </ErrorBoundary>\r\n  );\r\n}\r\n\r\nexport default App;\r\n*/\r\nimport React, { useState } from \"react\";\r\nimport { BrowserRouter as Router, Route, Navigate } from \"react-router-dom\";\r\nimport ErrorBoundary from \"./components/errorBoundary/ErrorBoundary\";\r\nimport Root, { ROUTES } from \"./components/root/Root\";\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\nfunction App() {\r\n  // Define state variables for appointments and contacts\r\n  const [appointments, setAppointments] = useState([]);\r\n  const [contacts, setContacts] = useState([]);\r\n\r\n  // Callback function to add a new appointment\r\n  const addAppointment = (name, contact, date, time) => {\r\n    setAppointments([\r\n      ...appointments,\r\n      {\r\n        name: name,\r\n        contact: contact,\r\n        date: date,\r\n        time: time,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  // Callback function to add a new contact\r\n  const addContact = (name, phone, email) => {\r\n    setContacts([\r\n      ...contacts,\r\n      {\r\n        name: name,\r\n        phone: phone,\r\n        email: email,\r\n      },\r\n    ]);\r\n  };\r\n\r\n  // Router setup with React Router\r\n  return (\r\n    <Router>\r\n      {/* ErrorBoundary for better error handling */}\r\n      <ErrorBoundary>\r\n        {/* Define routes */}\r\n        <Route path=\"/\" element={<Root />} />\r\n        <Route index element={<Navigate to={ROUTES.CONTACTS} replace />} />\r\n        <Route\r\n          path={ROUTES.CONTACTS}\r\n          element={<ContactsPage contacts={contacts} addContact={addContact} />}\r\n        />\r\n        <Route\r\n          path={ROUTES.APPOINTMENTS}\r\n          element={\r\n            <AppointmentsPage\r\n              appointments={appointments}\r\n              addAppointment={addAppointment}\r\n              contacts={contacts}\r\n            />\r\n          }\r\n        />\r\n      </ErrorBoundary>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}